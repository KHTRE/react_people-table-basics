{"version":3,"sources":["components/Home.tsx","api/people.tsx","components/People.tsx","components/WrongPage.tsx","components/Navigation.tsx","App.tsx","index.tsx"],"names":["Home","getPeopleFromServer","a","fetch","peopleFromServer","json","People","useState","people","setPeople","getPeople","peopleArray","useEffect","className","scope","map","person","index","name","sex","born","died","fatherName","motherName","WrongPage","Navigation","to","isActive","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"mNAIeA,EAJF,kBACX,4C,6CCDWC,EAAmB,uCAAG,4BAAAC,EAAA,sEACFC,MAAM,qEADJ,cAC3BC,EAD2B,yBAG1BA,EAAiBC,QAHS,2CAAH,qDCsEjBC,EAnEU,WACvB,MAA4BC,mBAA0B,MAAtD,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAS,uCAAG,4BAAAR,EAAA,sEACUD,IADV,OACVU,EADU,OAGhBF,EAAU,YAAIE,IAHE,2CAAH,qDAMfC,qBAAU,WACRF,MACC,IAgDH,OACE,gCACE,gDA/CEF,EAEA,wBAAOK,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,yBAGJ,gCACGN,EAAOO,KAAI,SAACC,EAAQC,GACnB,IACEC,EAMEF,EANFE,KACAC,EAKEH,EALFG,IACAC,EAIEJ,EAJFI,KACAC,EAGEL,EAHFK,KACAC,EAEEN,EAFFM,WACAC,EACEP,EADFO,WAGF,OACE,+BACE,oBAAIT,MAAM,MAAV,SAAiBG,EAAQ,IACzB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKE,IACL,6BAAKD,eASX,kFCrDGE,EANG,kBAChB,wECsBaC,EArBI,kBACjB,sBAAKZ,UAAU,yBAAf,UACE,cAAC,IAAD,CACEa,GAAG,IACHb,UAAW,gBACTc,EADS,EACTA,SADS,4CAE0BA,EAAW,UAAY,KAJ9D,kBAQA,cAAC,IAAD,CACED,GAAG,UACHb,UAAW,gBACTc,EADS,EACTA,SADS,4CAE0BA,EAAW,UAAY,KAJ9D,wBCQWC,G,MAZH,kBACV,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUJ,GAAG,QAC1C,cAAC,IAAD,CAAOG,KAAK,IAAIC,QAAS,cAAC,EAAD,cCV/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f51ce3fe.chunk.js","sourcesContent":["const Home = () => (\n  <h1>Home page</h1>\n);\n\nexport default Home;\n","export const getPeopleFromServer = async () => {\n  const peopleFromServer = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n  return peopleFromServer.json();\n};\n","import { useEffect, useState } from 'react';\nimport { getPeopleFromServer } from '../api/people';\n\nconst People: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n\n  const getPeople = async () => {\n    const peopleArray = await getPeopleFromServer();\n\n    setPeople([...peopleArray]);\n  };\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  const getPageContent = () => {\n    if (people) {\n      return (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Sex</th>\n              <th scope=\"col\">Born</th>\n              <th scope=\"col\">Died</th>\n              <th scope=\"col\">Mother</th>\n              <th scope=\"col\">Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map((person, index) => {\n              const {\n                name,\n                sex,\n                born,\n                died,\n                fatherName,\n                motherName,\n              } = person;\n\n              return (\n                <tr>\n                  <th scope=\"row\">{index + 1}</th>\n                  <td>{name}</td>\n                  <td>{sex}</td>\n                  <td>{born}</td>\n                  <td>{died}</td>\n                  <td>{motherName}</td>\n                  <td>{fatherName}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      );\n    }\n\n    return (<span>Unfortunately we have nothing to show here</span>);\n  };\n\n  return (\n    <div>\n      <h1>List of people</h1>\n      {getPageContent()}\n    </div>\n  );\n};\n\nexport default People;\n","const WrongPage = () => (\n  <div>\n    Sorry... We do not have such page :(\n  </div>\n);\n\nexport default WrongPage;\n","import { NavLink } from 'react-router-dom';\n\nconst Navigation = () => (\n  <nav className=\"nav nav-pills nav-fill\">\n    <NavLink\n      to=\"/\"\n      className={({\n        isActive,\n      }) => `navbar-item is-tab nav-link ${isActive ? ' active' : ''}`}\n    >\n      Home\n    </NavLink>\n    <NavLink\n      to=\"/people\"\n      className={({\n        isActive,\n      }) => `navbar-item is-tab nav-link ${isActive ? ' active' : ''}`}\n    >\n      People\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport Home from './components/Home';\nimport People from './components/People';\nimport WrongPage from './components/WrongPage';\nimport Navigation from './components/Navigation';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/people\" element={<People />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"*\" element={<WrongPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}